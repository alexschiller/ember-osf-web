{"version":3,"sources":["../../src/utils/isBrowser.js","../../src/utils/debounce.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/getWindow.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/modifiers/applyStyle.js","../../src/modifiers/computeStyle.js","../../src/utils/isModifierRequired.js","../../src/modifiers/arrow.js","../../src/utils/getOppositeVariation.js","../../src/methods/placements.js","../../src/utils/clockwise.js","../../src/modifiers/flip.js","../../src/modifiers/keepTogether.js","../../src/modifiers/offset.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/shift.js","../../src/modifiers/hide.js","../../src/modifiers/inner.js","../../src/modifiers/index.js","../../src/methods/defaults.js","../../src/index.js"],"names":["i","pending","window","module","longerTimeoutBrowsers","microtaskDebounce","called","hasOwnProperty","oldName","oldGlobals","aliases","scheduled","dict","defaultDeps","supportsMicroTasks","Alias","id","start","element1","element2","end","order","registry","range","document","createRange","commonAncestorContainer","isOffsetContainer","element1root","findCommonOffsetParent","l","parts","length","getScroll","side","upperSide","html","element","ownerDocument","getType","makeDefaultExport","functionToCheck","getStyleComputedProperty","css","getComputedStyle","this","callback","nodeName","parentNode","Module","prototype","unsee","state","overflow","mod","exports","overflowY","findDeps","isIE10","isBrowser","entry","version","makeRequire","isIE11","findModule","resolve","dep","getOffsetParent","noOffsetParent","isIE","unsupportedModule","name","requirejs","has","scrollTop","scrollLeft","modifier","subtract","require","top","rect","define","alias","styles","getBordersSize","sideA","parseFloat","e","t","amd","moment","Qe","apply","arguments","Array","Object","toString","call","n","s","r","Date","a","push","o","u","valueOf","ge","utc","d","_pf","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","h","_isValid","Xe","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","c","NaN","f","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Ke","m","isValid","et","updateOffset","_","y","Math","ceil","floor","g","isFinite","p","min","abs","w","suppressDeprecationWarnings","console","warn","v","deprecationHandler","slice","join","Error","stack","M","tt","S","Function","D","k","set","Y","toLowerCase","st","O","T","x","it","b","pow","max","substr","P","ut","localeData","ordinal","W","match","replace","H","R","ot","rt","invalidDate","longDateFormat","at","lastIndex","test","C","Yt","F","RegExp","U","L","Ot","N","_w","G","_a","V","E","I","j","A","year","month","date","Z","z","monthsParse","$","q","monthsShort","months","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","J","UTC","getUTCFullYear","setUTCFullYear","B","getUTCDay","Q","dayOfYear","X","K","week","ee","day","weekdaysMin","weekdaysShort","weekdays","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","te","hours","ne","minutes","se","_meridiemParse","ie","re","Xt","Jt","_abbr","ae","ue","oe","Qt","abbr","_config","parentLocale","Kt","config","forEach","split","le","xt","bt","Tt","Pt","Wt","Ht","Rt","_overflowDayOfYear","_overflowWeeks","Ct","_overflowWeekday","Ft","de","he","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","GG","pe","_week","dow","doy","gg","_dayOfYear","_nextDay","setFullYear","getDay","setUTCMinutes","getUTCMinutes","ce","en","exec","tn","sn","rn","nn","_e","me","on","trim","parseInt","Vt","indexOf","fe","jt","un","ISO_8601","RFC_2822","_meridiem","meridiemHour","isPM","ye","preparse","score","an","createFromInputFallback","hour","minute","second","millisecond","getOwnPropertyNames","add","we","ve","quarter","Ut","hn","_milliseconds","_days","_months","_data","_bubble","Me","Se","round","De","utcOffset","ke","cn","Ye","clone","setTime","local","Oe","getTimezoneOffset","Te","xe","ms","milliseconds","fn","mn","be","isBefore","Pe","from","to","isAfter","We","He","Re","Ce","Fe","Ue","Le","Ne","Ge","Ve","Ee","Ie","Ae","je","Ze","ze","$e","as","qe","Je","Be","An","toFixed","asSeconds","some","nt","momentProperties","keys","lt","dt","ht","ct","ft","mt","_t","yt","gt","pt","wt","vt","Mt","St","Dt","kt","parseTwoDigitYear","Lt","monthsShortRegex","monthsRegex","Nt","Gt","Et","It","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","At","Zt","zt","$t","qt","seconds","_isPm","Bt","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","ln","dn","invalid","_n","yn","defaultFormat","defaultFormatUtc","gn","locale","weekYear","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","pn","wn","Mn","vn","Sn","Dn","startOf","calendarFormat","format","diff","endOf","isUtc","postformat","humanize","fromNow","toNow","get","invalidAt","isBetween","isSame","isSameOrAfter","isSameOrBefore","lang","parsingFlags","unit","priority","weekday","isoWeekday","toArray","toObject","years","toDate","toISOString","inspect","isLocal","toJSON","unix","creationData","input","isUTC","strict","isLeapYear","isoWeek","quarters","daysInMonth","weeks","isoWeeks","weeksInYear","isoWeeksInYear","days","_changeInProgress","parseZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","zone","isDSTShifted","_isDSTShifted","kn","_calendar","_longDateFormat","toUpperCase","_invalidDate","_ordinal","_relativeTime","pastFuture","source","isFormat","standalone","_monthsShort","_monthsParseExact","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","langData","Yn","On","Tn","xn","bn","Pn","Wn","Hn","Rn","Cn","Fn","Un","Ln","Nn","Gn","Vn","En","In","jn","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","toIsoString","isDate","duration","isMoment","isDuration","defineLocale","updateLocale","locales","normalizeUnits","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","DATE","TIME","TIME_SECONDS","TIME_MS","WEEK","MONTH","getSize","body","computedStyle","_babelPolyfill","len","getClientRect","offsets","width","height","inc","getBoundingClientRect","value","bottom","right","index","toAbsoluteIndex","aLen","undefined","endPos","119","10","_dereq_","iter","ITERATOR","sizes","horizScrollbar","vertScrollbar","fixedPosition","IS_INCLUDES","scrollParent","getScrollParent","children","childrenRect","TYPE","parentRect","IS_SOME","marginTop","callbackfn","that","marginLeft","borderTopWidth","self","left","borderLeftWidth","val","includeScroll","IS_EVERY","result","excludeScroll","15","25","47","13","relativeOffset","offset","toLength","memo","isRight","3","documentElement","el","parentElement","isObject","boundaries","offsetParent","getFixedPositionOffsetParent","boundariesElement","bound","boundariesNode","getWindowSizes","key","tryGet","TAG","forOf","getArea","computeAutoPlacement","placement","getBoundaries","rects","create","refRect","iterable","IS_MAP","ADDER","NAME","data","getEntry","prev","area","filteredAreas","sortedAreas","next","variation","computedPlacement","dP","commonOffsetParent","offsetHeight","setStrong","getOppositePlacement","matched","iterated","kind","validate","popperRect","getPopperOffsets","isHoriz","29","57","6","66","71","72","93","20","secondarySide","measurement","secondaryMeasurement","mainSide","referenceOffsets","popperOffsets","arr","check","UncaughtFrozenStore","findIndex","cur","find","splice","redefineAll","runModifiers","uncaughtFrozenStore","popper","reference","isDestroyed","originalPlacement","positionFixed","options","instance","isModifierEnabled","modifiers","$instance","wrapper","target","fixMethod","getSupportedPropertyName","prefixes","upperProp","property","BUGGY_ZERO","toCheck","prefix","proto","isCreated","methods","IS_WEAK","common","101","destroy","35","39","40","45","51","56","94","23","position","style","object","createDesc","willChange","removeOnDestroy","isBody","updateBound","scrollElement","lz","eventsEnabled","anObject","enableEventListeners","hint","TypeError","removeEventListeners","scrollParents","removeEventListener","createElement","31","disableEventListeners","core","isNumeric","setStyles","global","IS_STATIC","prop","exp","IS_BIND","own","ctx","out","IS_PROTO","setAttributes","applyStyle","getReferenceOffsets","computeStyle","isArray","gpuAcceleration","legacyGpuAccelerationOption","depth","mapper","thisArg","spreadable","offsetParentRect","sourceIndex","sourceLen","sideB","BREAK","getIterFn","prefixedProperty","step","RETURN","iterFn","iterator","done","entries","attributes","arrowStyles","isModifierRequired","requesting","requestingName","30","requested","args","propertyIsEnumerable","ArrayProto","49","isVertical","altSide","arrowElementSize","opSide","center","cof","popperMarginSide","popperBorderSide","arrowElement","ret","getOppositeVariation","Constructor","IteratorPrototype","descriptor","LIBRARY","validPlacements","$default","$native","getMethod","DEFAULT","$anyNative","DEF_VALUES","BUGGY","VALUES_BUG","returnThis","flip","33","41","42","54","58","60","79","placementOpposite","behavior","BEHAVIORS","safe","clockwise","refOffsets","overflowsLeft","overflowsTop","overflowsBoundaries","flippedVariation","overlapsRef","$abs","MIN32","$sign","EPSILON32","EPSILON","MAX32","Infinity","keepTogether","log","inLow","inHigh","outLow","outHigh","setDesc","toValue","isExtensible","META","size","setMeta","Map","parseOffset","useHeight","store","targetMetadata","targetKey","keyMetadata","MetadataKey","metadataMap","getOrCreateMetadataMap","MetadataValue","op","reduce","str","macrotask","Promise","frag","flush","last","parent","basePlacement","node","createTextNode","characterData","promise","notify","transformProp","popperStyles","transform","aFunction","$assign","IObject","isEnum","78","81","82","dPs","createDict","shiftvariation","iframe","shiftOffsets","Empty","102","hide","43","7","73","Attributes","120","44","Properties","subtractLength","getOwnPropertyDescriptor","gOPD","hiddenKeys","shift","fails","isEntries","Reflect","77","86","string","radix","hex","arrow","promiseCapability","$toString","inspectSource","inner","isFunction","SRC","124","95","99","buggy","DESCRIPTORS","SPECIES","shared","method","pos","TO_STRING","String","defined","scheduleUpdate","requestAnimationFrame","maxLength","fillString","stringLength","jquery","intMaxLength","stringFiller","118","28","110","res","RangeError","modifierOptions","onLoad","space","KEY","ALIAS","spaces","112","Defaults"],"mappings":"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","file":"vendor.js","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? html[`offset${axis}`] +\n        computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`] +\n        computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]\n      : 0\n  );\n}\n\nexport default function getWindowSizes() {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  const offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right),\n  };\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport',\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedule an update, it will run on the next UI update available\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]}